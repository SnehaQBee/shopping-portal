{"ast":null,"code":"var _jsxFileName = \"/Users/snehaqbee/Documents/projects/shopping/shopping-portal/src/Components/Context.js\";\nimport React, { Component } from \"react\";\n\n// * import data\nimport { storeProducts, detailProduct } from \"./../Data/Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/React.createContext();\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = {\n          ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n    // ! add item to cart function\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: [...tempProducts],\n          cart: [...this.state.cart, product],\n          detailProduct: {\n            ...product\n          }\n        };\n      }, this.addTotals);\n    };\n    // ! open & close modal function\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n    // ! cart components function\n    // increment function to increase cart product list\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => {\n        return item.id === id;\n      });\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, this.addTotals);\n    };\n    // decrement function to decrease cart product list\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => {\n        return item.id === id;\n      });\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, this.addTotals);\n      }\n    };\n    // get cart total product\n    this.getTotals = () => {\n      // const subTotal = this.state.cart\n      //   .map(item => item.total)\n      //   .reduce((acc, curr) => {\n      //     acc = acc + curr;\n      //     return acc;\n      //   }, 0);\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      return {\n        subTotal,\n        tax,\n        total\n      };\n    };\n    // adding total product list\n    this.addTotals = () => {\n      const totals = this.getTotals();\n      this.setState(() => {\n        return {\n          cartSubTotal: totals.subTotal,\n          cartTax: totals.tax,\n          cartTotal: totals.total\n        };\n      }, () => {\n        // console.log(this.state);\n      });\n    };\n    // delete a item in cart\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      tempCart = tempCart.filter(item => {\n        return item.id !== id;\n      });\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, this.addTotals);\n    };\n    // delete all item in cart\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n  }\n  componentDidMount() {\n    this.setProducts();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: {\n        ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        // modal\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        // cart\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"names":["React","Component","storeProducts","detailProduct","jsxDEV","_jsxDEV","ProductContext","createContext","ProductProvider","constructor","args","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","getTotals","subTotal","map","tempTax","tax","parseFloat","toFixed","totals","removedProduct","filter","clearCart","componentDidMount","render","Provider","value","children","props","fileName","_jsxFileName","lineNumber","columnNumber","ProductConsumer","Consumer"],"sources":["/Users/snehaqbee/Documents/projects/shopping/shopping-portal/src/Components/Context.js"],"sourcesContent":["import React, { Component } from \"react\";\n\n// * import data\nimport { storeProducts, detailProduct } from \"./../Data/Data\";\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0,\n  };\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  setProducts = () => {\n    let tempProducts = [];\n\n    storeProducts.forEach((item) => {\n      const singleItem = { ...item };\n      tempProducts = [...tempProducts, singleItem];\n    });\n\n    this.setState(() => {\n      return { products: tempProducts };\n    });\n  };\n\n  getItem = (id) => {\n    const product = this.state.products.find((item) => item.id === id);\n    return product;\n  };\n\n  handleDetail = (id) => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n\n  // ! add item to cart function\n  addToCart = (id) => {\n    let tempProducts = [...this.state.products];\n    const index = tempProducts.indexOf(this.getItem(id));\n    const product = tempProducts[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n\n    this.setState(() => {\n      return {\n        products: [...tempProducts],\n        cart: [...this.state.cart, product],\n        detailProduct: { ...product },\n      };\n    }, this.addTotals);\n  };\n\n  // ! open & close modal function\n  openModal = (id) => {\n    const product = this.getItem(id);\n\n    this.setState(() => {\n      return { modalProduct: product, modalOpen: true };\n    });\n  };\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false };\n    });\n  };\n\n  // ! cart components function\n  // increment function to increase cart product list\n  increment = (id) => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find((item) => {\n      return item.id === id;\n    });\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count + 1;\n    product.total = product.count * product.price;\n    this.setState(() => {\n      return {\n        cart: [...tempCart],\n      };\n    }, this.addTotals);\n  };\n\n  // decrement function to decrease cart product list\n  decrement = (id) => {\n    let tempCart = [...this.state.cart];\n    const selectedProduct = tempCart.find((item) => {\n      return item.id === id;\n    });\n    const index = tempCart.indexOf(selectedProduct);\n    const product = tempCart[index];\n    product.count = product.count - 1;\n    if (product.count === 0) {\n      this.removeItem(id);\n    } else {\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return { cart: [...tempCart] };\n      }, this.addTotals);\n    }\n  };\n\n  // get cart total product\n  getTotals = () => {\n    // const subTotal = this.state.cart\n    //   .map(item => item.total)\n    //   .reduce((acc, curr) => {\n    //     acc = acc + curr;\n    //     return acc;\n    //   }, 0);\n    let subTotal = 0;\n    this.state.cart.map((item) => (subTotal += item.total));\n    const tempTax = subTotal * 0.1;\n    const tax = parseFloat(tempTax.toFixed(2));\n    const total = subTotal + tax;\n    return {\n      subTotal,\n      tax,\n      total,\n    };\n  };\n\n  // adding total product list\n  addTotals = () => {\n    const totals = this.getTotals();\n    this.setState(\n      () => {\n        return {\n          cartSubTotal: totals.subTotal,\n          cartTax: totals.tax,\n          cartTotal: totals.total,\n        };\n      },\n      () => {\n        // console.log(this.state);\n      }\n    );\n  };\n\n  // delete a item in cart\n  removeItem = (id) => {\n    let tempProducts = [...this.state.products];\n    let tempCart = [...this.state.cart];\n\n    const index = tempProducts.indexOf(this.getItem(id));\n    let removedProduct = tempProducts[index];\n    removedProduct.inCart = false;\n    removedProduct.count = 0;\n    removedProduct.total = 0;\n\n    tempCart = tempCart.filter((item) => {\n      return item.id !== id;\n    });\n\n    this.setState(() => {\n      return {\n        cart: [...tempCart],\n        products: [...tempProducts],\n      };\n    }, this.addTotals);\n  };\n\n  // delete all item in cart\n  clearCart = () => {\n    this.setState(\n      () => {\n        return { cart: [] };\n      },\n      () => {\n        this.setProducts();\n        this.addTotals();\n      }\n    );\n  };\n\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n\n          // modal\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n\n          // cart\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart,\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}